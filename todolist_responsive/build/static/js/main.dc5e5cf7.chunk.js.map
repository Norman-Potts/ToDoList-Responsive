{"version":3,"sources":["components/Mydateselector.js","components/leform.js","components/Noteslist.js","components/Task.js","components/lalist.js","App.js","serviceWorker.js","index.js"],"names":["Mydateselector","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","DayChange","event","d","target","value","y","state","Year","m","Month","dateChange","setState","Day","MonthChange","Arrdays","CalculateDaysArr","lstdy","length","s","Number","dayss","YearChange","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","Arryears","Arrmonths","DisMonth","monthss","yearss","month","year","NumDaysinMonth","ArrDays","di","push","react_default","a","createElement","className","id","name","onChange","map","item","key","Component","leform","priorityChange","p","priority","EnterNewTaskClick","description","preventDefault","formitem","title","date","jsonItem","JSON","stringify","http","XMLHttpRequest","onreadystatechange","readyState","status","responseText","LoadList","bind","assertThisInitialized","open","setRequestHeader","send","descriptionChange","i","replace","input","titleChange","type","size","maxLength","rows","cols","components_Mydateselector","onClick","Noteslist","inputChange","insertNote","e","cb","givenText","taskID","that","checkStatus","response","error","Error","concat","statusText","console","log","parseJSON","json","n","parse","notes","fetch","method","body","headers","Accept","Content-Type","then","forEach","onSubmit","acceptCharset","task","readOnly","Task","handleDelete","CompleteChange","complete","c","t","text","_this2","tklvl","CreatedDate","components_Noteslist","duedate","defaultChecked","lalist","tasks","internalArr","tk","components_Task","App","loadArray","records","components_leform","components_lalist","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc5e5cf7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Mydateselector extends Component {\r\n  constructor(props) {\r\n\t   super(props);\r\n        var today = new Date();\r\n   \t\t\tvar dd = today.getDate();\r\n   \t\t\tvar mm = today.getMonth(); //January is 0!\r\n   \t\t\tvar yyyy = today.getFullYear();\r\n   \t\t\tvar Arryears  = [ yyyy, yyyy+1, yyyy+2, yyyy+3, yyyy+4, yyyy+5];\r\n   \t\t\tvar Arrmonths = ['January','February','March','April','May','June','July','August','September','October','November','December'];\r\n   \t\t\tvar DisMonth = Arrmonths[mm];\r\n   \t\t\tvar  Arrdays = this.CalculateDaysArr(DisMonth,yyyy);\r\n   \t\t\tthis.state = {\r\n   \t\t\t\tDay: dd, Month: DisMonth, Year: yyyy , dayss: Arrdays, monthss: Arrmonths, yearss:Arryears\r\n   \t\t\t};\r\n  }\r\n  componentWillMount() {\r\n\t   this.props.dateChange(this.state.Day, this.state.Month, this.state.Year);\r\n\t}\r\n  CalculateDaysArr(month, year) {\r\n    var ArrDays = [];\r\n    var NumDaysinMonth;\r\n     // 31 or 30 days?\r\n    if(month === 'January' || month === 'March' || month === 'May' || month === 'July' || month === 'August' || month === 'October' || month === 'December') {\r\n      NumDaysinMonth = 31;\r\n    } else if(month === 'April' || month === 'June' || month === 'September' || month === 'November') {\r\n      NumDaysinMonth = 30;\r\n    } else {\r\n      // If month is February, calculate whether it is a leap year or not\r\n      var yr = year;\r\n      (yr - 2016) % 4 === 0 ? NumDaysinMonth = 29 : NumDaysinMonth = 28;\r\n    }\r\n    var di= 0;\r\n    do {\r\n      di++;\r\n      ArrDays.push(di);\r\n    }while(di < NumDaysinMonth )\r\n    return ArrDays;\r\n  }\r\n  DayChange = (event) => {\r\n    var d  =  event.target.value;\r\n    var y  = this.state.Year;\r\n    var m  = this.state.Month;\r\n    this.props.dateChange(d, m, y);\r\n    this.setState({ Day: d,});\r\n  }\r\n  MonthChange = (event) => {\r\n    var y  = this.state.Year;\r\n    var m  =  event.target.value;\r\n    var  Arrdays = this.CalculateDaysArr(m,y);\r\n    var d = 0; // Set the new day state to the current state day if the last day of the set month is  is less than the current day state.\r\n    var lstdy = Arrdays.length;\r\n    if ( lstdy < this.state.Day ) {\r\n      d = lstdy;\r\n    } else {\r\n      var s = this.state.Day;\r\n        d = Number(s);\r\n    }\r\n    this.props.dateChange(d, m, y);\r\n    this.setState({ Month: m, dayss: Arrdays, Day: d});\r\n  }\r\n  YearChange = (event) => {\r\n    var m  = this.state.Month;\r\n    var y  =  event.target.value;\r\n    var  Arrdays = this.CalculateDaysArr(m,y);\r\n    var d = 0; // Set the new day state to the current state day if the last day of the set month is  is less than the current day state.\r\n    var lstdy = Arrdays.length;\r\n    if ( lstdy < this.state.Day ) {\r\n      d = lstdy;\r\n    } else {\r\n      var s = this.state.Day;\r\n      d = Number(s);\r\n    }\r\n    this.props.dateChange(d, m, y);\r\n    this.setState({ Year: y, dayss: Arrdays, Day: d });\r\n  }\r\n  render() {\r\n    return (\r\n      <span className = \"selectdateblocks\">\r\n        <select id=\"year\" name=\"year\"  value={this.state.Year} onChange={this.YearChange}>\r\n                {this.state.yearss.map((item) => (\r\n                <option  key = {item} value = {item} >{item}</option>\r\n              ))}\r\n              </select>\r\n\r\n        <select id=\"month\" name=\"month\"  value={this.state.Month} onChange={this.MonthChange}>\r\n              {this.state.monthss.map((item) => (\r\n                <option  key = {item} value = {item} >{item}</option>\r\n              ))}\r\n              </select>\r\n\r\n        <select id=\"day\" name=\"day\"  value={this.state.Day} onChange={this.DayChange}>\r\n              {this.state.dayss.map((item) => (\r\n                <option key = {item} value = {item} >{item}</option>\r\n              ))}\r\n              </select>\r\n        \r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mydateselector;\r\n","import React, { Component } from 'react';\r\nimport tools from '../tools.js';\r\nimport Mydateselector from './Mydateselector.js';\r\n\r\nclass leform extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= { priority:3, title:'', description:'' };\r\n  }\r\n  priorityChange = (event) => {\r\n    var p = event.target.value;\r\n  \tthis.setState({ priority:p });\r\n  }\r\n  EnterNewTaskClick = (event) => {\r\n    event.preventDefault();\r\n  \tvar description, title, priority, date;\r\n  \tdescription = this.state.description;\r\n  \ttitle = this.state.title;\r\n  \tpriority = this.state.priority;\r\n  \tdate = this.state.date;\r\n  \tvar formitem =  [ title, description, priority, date ];\t  \r\n  \tvar jsonItem = JSON.stringify( formitem );\t\t\t\t \r\n  \tvar http = new XMLHttpRequest();\t\t\t\t\t\t \r\n  \thttp.onreadystatechange = function() {\r\n  \t   if (http.readyState == 4 && http.status == 200) {\r\n  \t\t     var response = http.responseText;\r\n  \t\t\t\t if(response == \"CREATE ENTRY SUCCESSFUL\"){\r\n  \t\t\t\t       this.setState({ priority: 3, title:'', description:''});\r\n  \t\t\t\t\t     this.props.LoadList();\r\n           }\r\n       }\r\n   }.bind(this);\r\n  \tvar url = 'recive_form/'\r\n  \thttp.open('POST', url, true);\r\n  \thttp.setRequestHeader('jsonInput', jsonItem);\r\n  \thttp.send(  jsonItem  );\r\n  }\r\n  \t descriptionChange = (event) => {\r\n\t\t\t\tvar i = event.target.value;\r\n\t\t\t\tif (i.length > 0 ) {\r\n\t\t\t\t\ti = i.replace(/[^0-9a-zA-Z \\?\\!\\.\\,]+/g, \"\" );\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({input: i});\r\n  \t\t\tthis.setState({ description:i });\r\n  \t\t}\r\n  \t\ttitleChange = (event) => {\r\n\t\t\t\tvar i = event.target.value;\r\n\t\t\t\tif (i.length > 0 ) {\r\n\t\t\t\t\ti = i.replace(/[^0-9a-zA-Z \\?\\!\\.\\,]+/g, \"\" );\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({input: i});\r\n  \t\t\tthis.setState({ title:i });\r\n  \t\t}\r\n  \t\tdateChange = (d, m, y) => {\r\n  \t\t\tvar date = y+\" \"+m+\" \"+d;\r\n  \t\t\tthis.setState( { date:date } );\r\n  \t\t}\r\n  \t\trender() {\r\n  \t\t\treturn (\r\n  \t\t\t\t<form id=\"leform\"> \r\n\t\t\t\t\t\t<div id = \"containForm\">\r\n             <h2>To Do App</h2>\r\n  \t\t\t\t\t<p> Add to To do list. </p>\r\n  \t\t\t\t\t<p> Title: <input className = \"inTitle\" type=\"Text\" name =\"title\" size=\"35\" maxLength = \"35\" value={this.state.title} onChange={this.titleChange} ></input>\t</p>\r\n  \t\t\t\t\t<p> Description: </p><p><textarea value={this.state.description}   name =\"description\" maxLength =\"1000\" rows=\"4\" cols=\"50\" onChange={this.descriptionChange} ></textarea>\t</p>\r\n  \t\t\t\t\t<p> Due Date: <Mydateselector dateChange = {this.dateChange} /> </p>\r\n  \t\t\t\t\t<div><div className = \"PriorityBlock\" > Priority:  <select id=\"priority\" name=\"priority\"  value={this.state.priority} onChange={this.priorityChange}>\r\n  \t\t\t\t\t\t\t\t\t<option className = \"DEFCON1\" value = {1} >Level 1</option>\r\n  \t\t\t\t\t\t\t\t\t<option className = \"DEFCON2\" value = {2} >Level 2</option>\r\n  \t\t\t\t\t\t\t\t\t<option className = \"DEFCON3\" value = {3} >Level 3</option>\r\n  \t\t\t\t\t\t\t\t\t<option className = \"DEFCON4\" value = {4} >Level 4</option>\r\n  \t\t\t\t\t\t\t\t\t<option className = \"DEFCON5\" value = {5} >Level 5</option>\r\n  \t\t\t\t\t\t\t\t   </select>\r\n              </div>\r\n              <div>Level 1 most important, level 5 least important.</div>\r\n  \t\t\t\t\t</div>\r\n            <p>\r\n  \t\t\t\t\t\t<button  onClick = { this.EnterNewTaskClick } > add </button>\r\n  \t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n  \t\t\t\t</form>\r\n  \t\t\t);\r\n  \t\t}\r\n}\r\n\r\nexport default leform;\r\n","import React, { Component } from 'react';\r\n \r\n\r\nclass Noteslist extends Component {\r\n  constructor(props) {\r\n\t   super(props);\r\n     this.state = { notes : this.props.notes, input: \"\" };\r\n  }\r\n  inputChange = (event) => {\r\n\t\tvar i = event.target.value;\r\n\t\tif (i.length > 0 ) {\r\n\t\t\ti = i.replace(/[^0-9a-zA-Z \\?\\!\\.\\,]+/g, \"\" );\r\n\t\t}\r\n  \tthis.setState({input: i});\r\n  }\r\n  insertNote = (e) => {\r\n\t\te.preventDefault();\r\n\t\tvar givenText = this.state.input;     var id = e.target.taskID.value;\r\n\t\tvar jsonItem = JSON.stringify([id, givenText]);\r\n\t\tvar destination = 'AddNote/';\r\n\t\tconst that = this;\r\n \r\n\t\tsendHer(jsonItem, destination, finish);\r\n\t\tfunction sendHer(jsonpackage, url, cb) {\r\n\t\t\treturn fetch(url, {\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\tbody: jsonpackage,\r\n\t\t\t\theaders:{\r\n\t\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t},\r\n\t\t\t}).then(checkStatus)\r\n\t\t\t  .then(parseJSON)\r\n              .then(cb);\r\n\t\t}\r\n\t\tfunction checkStatus(response) {\r\n\t\t\tif (response.status >= 200 && response.status < 300) {\r\n\t\t\t\treturn response;\r\n\t\t\t} else {\r\n\t\t\t\tconst error = new Error(`HTTP Error ${response.statusText}`);\r\n\t\t\t\terror.status = response.statusText;\r\n\t\t\t\terror.response = response;\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tthrow error;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction parseJSON(response) {\r\n\r\n\t\t\treturn response.json();\r\n\t\t}\r\n\t\tfunction finish(response){\r\n\t\t\tif(response[0] == \"ADD NOTE SUCCESSFUL\") {\r\n\t\t\t\tvar n = JSON.parse( response[1]);\r\n\t\t\t\tthat.setState({ notes:n, input: \"\"});\r\n\t\t\t}\r\n\t\t}\r\n  }\r\n  render() {\r\n\t\tvar notes = [];\r\n\t\tthis.state.notes.forEach((n, i) => (\r\n\t\t\tnotes.push(<li key = {i} >{n}</li>)\r\n\t\t));\r\n\r\n    return (\r\n      <div id = \"NoteComponent\">\r\n    \t   <ol>\r\n    \t    {notes}\r\n          <form onSubmit = { this.insertNote}  acceptCharset = \"utf-8\">\r\n    \t\t\t\t  <input type=\"Text\" name =\"Note\" size=\"20\" value={this.state.input} onChange={this.inputChange} ></input>\r\n              <input type=\"hidden\" name = \"taskID\" value = {this.props.task.id} readOnly></input>\r\n    \t\t\t\t  <input type = \"Submit\" value = \"Add Note\" readOnly></input>\r\n          </form>\r\n          </ol>\r\n    \t</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Noteslist;\r\n","import React, { Component } from 'react';\r\nimport Noteslist from './Noteslist.js';\r\n \r\n\r\nclass Task extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { task : this.props.t };\r\n }\r\n  handleDelete = (id) => {\r\n    var http = new XMLHttpRequest();\t\t\t\t\t\t \r\n    http.onreadystatechange = function() {\r\n      if (http.readyState == 4 && http.status == 200) {\r\n        var response = http.responseText;\r\n        if(response == \"DELETE TASK SUCCESSFUL\") {          \r\n          this.props.LoadList();\r\n        }\r\n      }\r\n    }.bind(this);\r\n    var url = 'delete_task/'\r\n    http.open('POST', url, true);\r\n    http.setRequestHeader('id', id);\r\n    http.send();\r\n}\r\nCompleteChange = (task) => {\r\n  const complete = task.complete;     var id = task.id;\r\n  var jsonItem = JSON.stringify([id, complete]);\r\n  var destination = 'ChangeComplete/';\r\n  const that = this;\r\n  sendHer(jsonItem, destination, finish);\r\n  function sendHer(jsonpackage, url, cb) {\r\n    return fetch(url, {\r\n      method: 'post',\r\n      body: jsonpackage,\r\n      headers:{\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).then(checkStatus)\r\n      .then(response => response.text())\r\n      .then(cb);\r\n  }\r\n  function checkStatus(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return response;\r\n    } else {\r\n      const error = new Error(`HTTP Error ${response.statusText}`);\r\n      error.status = response.statusText;\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  }\r\n  function finish(response){\r\n    if(response == \"CHANGE COMPLETE SUCCESSFUL\") {\r\n      var c = (complete == 0 )? 1 : 0;\r\n      var t = that.state.task;\r\n      t.complete = c;\r\n      that.setState({ task: t })\r\n    }\r\n  }\r\n}\r\nrender() {\r\n  var t = this.state.task;\r\n  var tklvl = \"\";\r\n\r\n  switch(t.priority){\r\n    case '1': tklvl = \"tklvl DEFCON1\"; break;\r\n    case '2': tklvl = \"tklvl DEFCON2\"; break;\r\n    case '3': tklvl = \"tklvl DEFCON3\"; break;\r\n    case '4': tklvl = \"tklvl DEFCON4\"; break;\r\n    case '5': tklvl = \"tklvl DEFCON5\"; break;\r\n  }\r\n  return (\r\n    <div className = \"task\" >\r\n      <div className=\"tktopRow\">\r\n        <div  className = \"tktitle\" >Task: {t.title}</div>\r\n        <div className = \"tkCreatedOn\">Created On: {t.CreatedDate} </div> \r\n      </div>\r\n      <div className = \"tkdescription\"> Description: {t.description} </div>\r\n      <div className = \"tknotes\"> Notes\r\n        <Noteslist  notes = {t.notes} task = {t} />\r\n      </div>\r\n      <div className=\"tkbottomRow\">\r\n        <span className = {tklvl} > Level {t.priority} Priority </span>\r\n        <span className = \"tkdue\"> Due Date: {t.duedate} </span>\r\n        <span className = \"tkcomplete\"> Completed: <input type=\"checkbox\" defaultChecked={t.complete} onChange={ () =>  this.CompleteChange(t)} />  </span>\r\n        <span className = \"tkdelspace\"> <button onClick = {  () =>  this.handleDelete(t.id)} >Delete</button>  </span>\r\n      </div>\r\n    </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default Task;\r\n","import React, { Component } from 'react';\r\nimport Task from './Task.js';\r\n\r\nclass lalist extends Component {\r\n  render() {\r\n      var tasks = [];\r\n      this.props.internalArr.forEach((tk) => (\r\n        tasks.push(<Task key = {tk.id} t = {tk} LoadList = {this.props.LoadList} />)\r\n      ));\r\n  \t\treturn (\r\n  \t\t\t<div id = \"lalist\">\r\n  \t\t  \t{tasks}\r\n  \t\t\t</div>\r\n  \t\t);\r\n  }\r\n}\r\n\r\nexport default lalist;\r\n","import React, { Component } from 'react';\nimport Leform from './components/leform.js';\nimport Lalist from './components/lalist.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n\t   super(props);\n     this.state = { internalArr : [] };\n  }\n  componentWillMount() {\n    this.loadArray();\n  }\n  loadArray = () => {\n    var http = new XMLHttpRequest();\n    http.onreadystatechange = function() {\n      if (http.readyState == 4 && http.status == 200) {\n        var response = http.responseText;\n    \t  var records  =  JSON.parse( response );\n    \t  this.setState({   internalArr: records  });\n      }\n    }.bind(this);\n    var url = 'table/'\n    http.open('GET', url, true);\n    http.send();\n  }\n  render() {\n    return (\n      <div id = \"App\">\n\n\t\t\t   <Leform LoadList = {this.loadArray} />\n\t\t\t   <Lalist LoadList = {this.loadArray} internalArr = {this.state.internalArr} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}